package dataStructure;

public class SinglyLinkedList {
	Node head; // 첫번째 노드
	int size = 0; // 크기
	
	public void add(int index, Object data) { 
		Node node = new Node();
		node.data = node;
		
		if(index == 0) { // 첫번째면 node는 head가 된다
			node.next = head;
			head = node; // 이거 해줘야 하나? => 첫뻔재 노드의 주소 복사 
		} else {
			// 아니면 index의 앞쪽을 찾아서 새로운 node를 연결하고 기존의 node는 새로운 node의 next가 된다
			Node foundNode = findNode(index - 1);
			// 찾은 Node의 next에 새로 만든 노드를 넣는다
			foundNode.next = node;
		}
		
		size++;
		
	}
	
	public Node findNode(int searchIndex) {
		// head에서 부터 하나씩 넘어가면서 찾아가야 함
		
        int nodeIndex = 0;
        Node pointer = head;
        /**
         * 찾는 노드의 index와 노드의 순서가 동일할 때 까지
         * 노드의 참조값을 이용하여 이동한다.
         */
        while (nodeIndex != searchIndex) {
            ++nodeIndex;
            pointer = pointer.next;
        }
        
        return pointer;
	}
}
